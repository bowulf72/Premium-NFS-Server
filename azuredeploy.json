{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vmName": {
      "type": "string",
      "metadata": {
        "description": "VM Name"
      },
      "maxLength": 8
    },
    "VMsku": {
      "type": "string",
      "defaultValue": "Standard_L80s_v2",
      "allowedValues": [
        "Standard_L8s_v2",
        "Standard_L16s_v2",
        "Standard_L32s_v2",
        "Standard_L64s_v2",
        "Standard_L80s_v2"
      ],
      "metadata": {
        "description": "sku to use"
      }
    },
    "adminUserName": {
      "type": "string",
      "metadata": {
        "description": "User name for the Virtual Machine."
      }
    },
    "authenticationType": {
      "type": "string",
      "defaultValue": "password",
      "allowedValues": [
        "password",
        "sshPublicKey"
      ],
      "metadata": {
        "description": "Authentication type for the virtual machines"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "Admin password for the virtual machines"
      }
    },
    "sshPublicKey": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "SSH public key that will be included on all nodes. The OpenSSH public key can be generated with tools like ssh-keygen on Linux or OS X."
      }
    },
    "existingVNetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "name of existing Virtual Network"
      }
    },
    "existingVNetResourceGroup": {
      "type": "string",
       "defaultValue": "",
      "metadata": {
        "description": "name of Resource Group for existing Virtual Network"
      }
    },
    "existingSubnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "name of existing Virtual Network"
      }
    }
  },
  "variables": {
    "location": "[resourceGroup().location]",
    "longNamingInfix": "[toLower(parameters('vmName'))]",
    "newStorageAccountSuffix": "[concat(variables('longNamingInfix'), 'sa')]",
    "vnetID": "[resourceId(parameters('existingVNetResourceGroup'), 'Microsoft.Network/virtualNetworks', parameters('existingVNetName'))]",
    "SubnetRef": "[concat(variables('vnetID'),'/subnets/', parameters('existingSubnetName'))]",
    "DiagSAName": "[concat(uniqueString(concat(resourceGroup().id, variables('newStorageAccountSuffix'), 'masterboxsadiag')), 'diag')]",
    "IPConfigName": "[concat(parameters('vmName'), '-ipconfig')]",
    "NicName": "[concat(parameters('vmName'), '-nic')]",
    "sshKeyPath": "[concat('/home/',parameters('adminUserName'),'/.ssh/authorized_keys')]",
    "linuxConfiguration_sshPublicKey": {
      "disablePasswordAuthentication": "true",
      "ssh": {
        "publicKeys": [
          {
            "path": "[variables('sshKeyPath')]",
            "keyData": "[parameters('sshPublicKey')]"
          }
        ]
      }
    },
    "linuxConfiguration_password": { },
    "linuxConfiguration": "[variables(concat('linuxConfiguration_',parameters('authenticationType')))]",
    
    "storageAccountType": "Standard_LRS",
    
    "mastervmScripts": {
      "scriptsToDownload": [
        "https://raw.githubusercontent.com/grandparoach/Premium-NFS-Server/LSeries/setup.sh"
      ],
      "commandToExecute": "bash setup.sh"
    }

  },  
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('DiagSAName')]",
      "location": "[variables('location')]",
      "apiVersion": "2015-06-15",
      "properties": {
        "accountType": "Standard_LRS"
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('NicName')]",
      "location": "[variables('location')]",
      "apiVersion": "2018-10-01",
      "dependsOn": [ ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "[variables('IPConfigName')]",
            "properties":  {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('SubnetRef')]"
              }
            }
          }
        ],
        "enableAcceleratedNetworking": true
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('vmName')]",
      "location": "[variables('location')]",
      "apiVersion": "2018-10-01",
      "dependsOn": [
        "[concat('Microsoft.Network/networkinterfaces/', variables('NicName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('DiagSAName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('VMsku')]"
        },
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "[parameters('adminUserName')]",
          "adminPassword": "[parameters('adminPassword')]",
          "linuxConfiguration": "[variables('linuxConfiguration')]"
        },
        "storageProfile": {
            "imageReference": {
                "publisher": "Canonical",
                "offer": "UbuntuServer",
                "sku": "18.04-LTS",
                "version": "latest"
            },
          "osDisk": {
            "caching": "ReadOnly",
            "createOption": "FromImage",
             "managedDisk": {
                "storageAccountType": "Premium_LRS"
             },
             "diskSizeGB": 30 
          },
          "dataDisks": []  
        },
        "networkProfile": {
          "networkInterfaces": [
            {
               "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('NicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
           "storageUri": "[concat('http://',variables('DiagSAName'),'.blob.core.windows.net')]"
          }
        }
      }
    },     
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('vmName'), '/ext')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": "[variables('mastervmScripts').scriptsToDownload]"
        },
        "protectedSettings": {
          "commandToExecute": "[variables('mastervmScripts').commandToExecute]"
        }
      }
    }
  ]
}

